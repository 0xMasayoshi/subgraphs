type User @entity {
  id: ID!
  stakes: [Stake!] @derivedFrom(field: "user")
  incentives: [_Subscription!] @derivedFrom(field: "user")
  subscriptionCount: BigInt!
  rewardClaimCount: BigInt!
}


type Token @entity {
  id: ID!
  symbol: String!
  symbolSuccess: Boolean!
  name: String!
  nameSuccess: Boolean!
  decimals: BigInt!
  decimalsSuccess: Boolean!
}

type Stake @entity {
  id: ID!
  user: User!
  token: Token!
  liquidity: BigInt!
  block: BigInt!
  timestamp: BigInt!
}


type Incentive @entity {
  id: ID!
  creator: User!
  token: Token!
  rewardToken: Token!
  rewardRemaining: BigInt!
  startTime: BigInt!
  endTime: BigInt!
  rewardPerLiquidity: BigInt!
  lastRewardTime: BigInt!
  liquidityStaked: BigInt!
  subscribers: [_Subscription!] @derivedFrom(field: "incentive")
}

type _Subscription @entity {
  id: ID!
  user: User!
  incentive: Incentive!
  token: Token!
  rewardPerLiquidity: BigInt! 
  block: BigInt!
  timestamp: BigInt!
}

type RewardClaim @entity {
  id: ID!
  user: User!
  token: Token!
  incentive: Incentive!
  amount: BigInt!
}
