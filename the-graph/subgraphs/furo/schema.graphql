enum StreamStatus {
  ACTIVE
  CANCELLED
  EXIRED
}

type Stream @entity {
  id: ID!# starts at 1001
  recipient: User!
  amount: BigInt!
  withdrawnAmount: BigInt!
  token: Token!
  status: StreamStatus!
  createdBy: User!
  fromBentox: Boolean!
  startedAt: BigInt!
  exiresAt: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTimestamp: BigInt!
}

type StreamTopUp @entity {
  # TODO: rename, keep history of any changes made to the event
}

type Transaction @entity {
  
}

type Token @entity {
  id: ID!
  symbol: String!
  symbolSuccess: Boolean!
  name: String!
  nameSuccess: Boolean!
  decimals: BigInt!
  decimalsSuccess: Boolean!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}


type User @entity {
  id: ID!
  streams: [Stream!]! @derivedFrom(field: "recipient")
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}
