type XSushi @entity {
  id: ID! # Hardcoded to 'xSushi'
  userCount: BigInt!
  transactionCount: BigInt!
  sushiSupply: BigInt!
  xSushiSupply: BigInt!
  sushiStaked: BigInt!
  sushiHarvested: BigInt!
  totalFeeAmount: BigInt!
  xSushiBurned: BigInt!
  xSushiMinted: BigInt!
  xSushiSushiRatio: BigDecimal!
  sushiXsushiRatio: BigDecimal!
}

enum TransactionType {
  TRANSFER
  MINT
  BURN
}

type Transaction @entity {
  id: ID!
  from: User!
  to: User!
  amount: BigInt!
  type: TransactionType!
  gasUsed: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
  block: BigInt!
  timestamp: BigInt!
}

type User @entity {
  id: ID!
  balance: BigInt!
  withdrawals: [Transaction!]! @derivedFrom(field: "from")
  deposits: [Transaction!]! @derivedFrom(field: "to")
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTimestamp: BigInt!
}

type FeeSender @entity {
  id: ID!
  totalFeeSent: BigInt!
  fees: [Fee!]! @derivedFrom(field: "sender")
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTimestamp: BigInt!
}

type Fee @entity {
  id: ID!
  sender: FeeSender!
  amount: BigInt!
  block: BigInt!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}